syntax = "proto3";

package pb;

import "google/api/annotations.proto";
import "rpc_create_user.proto";
import "rpc_update_user.proto";
import "rpc_login_user.proto";
import "rpc_verify_email.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/valrichter/go-basic-bank/pb";
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Basic Bank";
    version: "1.2";
    contact: {
      name: "valrichter";
      url: "https://github.com/valrichter";
      email: "valenrichter11@gmail.com";
    };
	};
};

service BasicBank {
	rpc CreateUser (CreateUserRequest) returns (CreateUserResponse) {
		option (google.api.http) = {
      post: "/v1/create_user"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to Create a new User";
      summary: "Gateway: Create a new User";
    };
	}

  rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse) {
      option (google.api.http) = {
        patch: "/v1/update_user"
        body: "*"
      };
      option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
        description: "Use this API to Update a User";
        summary: "Gateway: Update a User";
      };
    }

	rpc LoginUser (LoginUserRequest) returns (LoginUserResponse) {
		option (google.api.http) = {
      post: "/v1/login_user"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to Login a User and get access token & refresh token";
      summary: "Gateway: Login a User";
    };
	}

  rpc VerifyEmail (VerifyEmailRequest) returns (VerifyEmailResponse) {
    option (google.api.http) = {
      get: "/v1/verify_email"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to verify user's email address";
      summary: "Gateway: Verify Email";
    };
  }
}